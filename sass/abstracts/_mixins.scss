// CLEAR FIX HACK for floats elements

@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin absCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// MEDIA QUERY MANAGER
/*
max
0-600px: phone
600 - 900px tablet portrait
900 1200 tablet landscape

[1200-1800] is where our normal styles apply  <- desktop first 

min
1800px ++ big desktop

*/

// @mixin respond-phone {
//   @media (max-width: 600px) {
//     @content; // by this we can pass the values to the mixin // entire block of code
//   }
// }

/*
$breakpoint argument choices
- phone
-tab-port
-tab-land
-big-desktop
*/
// @mixin respond($breakpoint) {
//   // the same like in programing - test if true or false
//   @if $breakpoint == phone {
//     @media (max-width: 600px) {
//       @content;
//     }
//   }
//   @if $breakpoint == tab-port {
//     @media (max-width: 900px) {
//       @content;
//     }
//   }
//   @if $breakpoint == tab-land {
//     @media (max-width: 1200px) {
//       @content;
//     }
//   }
//   @if $breakpoint == big-desktop {
//     @media (min-width: 1800px) {
//       @content;
//     }
//   }
// }

// 1em = 16 px
/*
em and rem are not effected in media queries by root values
so media queries always depends from default in browser and if user is going to change them it is going to be different value

em - are the best option for media queries
*/

// more accessible solution
@mixin respond($breakpoint) {
  // the same like in programing - test if true or false
  @if $breakpoint == phone {
    @media only screen and (max-width: 37.5em) {
      // 600px
      @content;
    }
  }
  @if $breakpoint == tab-port {
    @media only screen and (max-width: 56.25em) {
      // 900 px
      @content;
    }
  }
  // He said that is one of the most important break points
  @if $breakpoint == tab-land {
    @media only screen and (max-width: 75em) {
      // 1200px
      @content;
    }
  }
  @if $breakpoint == big-desktop {
    @media only screen and (min-width: 112.5em) {
      // 1800px
      @content;
    }
  }
}
